{"ast":null,"code":"var _jsxFileName = \"E:\\\\Module2_Chapter4-main\\\\Module2_Chapter4-main\\\\src\\\\LoanCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoanCalculator = () => {\n  _s();\n\n  const [loanAmount, setLoanAmount] = useState('');\n  const [interestRate, setInterestRate] = useState('');\n  const [loanTerm, setLoanTerm] = useState('');\n  const [monthlyPayment, setMonthlyPayment] = useState('');\n  const [totalPayment, setTotalPayment] = useState('');\n\n  const calculateLoan = () => {\n    if (loanAmount && interestRate && loanTerm) {\n      const principal = parseFloat(loanAmount);\n      const rate = parseFloat(interestRate) / 100 / 12;\n      const term = parseFloat(loanTerm);\n      const monthlyRate = Math.pow(1 + rate, term);\n      const monthlyPayment = principal * monthlyRate * rate / (monthlyRate - 1);\n      const totalPayment = monthlyPayment * term;\n      setMonthlyPayment(monthlyPayment.toFixed(2));\n      setTotalPayment(totalPayment.toFixed(2));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loan Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loanAmount\",\n          children: \"Loan Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"loanAmount\",\n          value: loanAmount,\n          onChange: e => setLoanAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"interestRate\",\n          children: \"Interest Rate (%):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"interestRate\",\n          value: interestRate,\n          onChange: e => setInterestRate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loanTerm\",\n          children: \"Loan Term (months):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"loanTerm\",\n          value: loanTerm,\n          onChange: e => setLoanTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: calculateLoan,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), monthlyPayment && totalPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Monthly Payment: $\", monthlyPayment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total Payment: $\", totalPayment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoanCalculator, \"tNhrxJEx5TbwKi12FujZBVjAZOM=\");\n\n_c = LoanCalculator;\nexport default LoanCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoanCalculator\");","map":{"version":3,"sources":["E:/Module2_Chapter4-main/Module2_Chapter4-main/src/LoanCalculator.js"],"names":["React","useState","LoanCalculator","loanAmount","setLoanAmount","interestRate","setInterestRate","loanTerm","setLoanTerm","monthlyPayment","setMonthlyPayment","totalPayment","setTotalPayment","calculateLoan","principal","parseFloat","rate","term","monthlyRate","Math","pow","toFixed","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst LoanCalculator = () => {\r\n  const [loanAmount, setLoanAmount] = useState('');\r\n  const [interestRate, setInterestRate] = useState('');\r\n  const [loanTerm, setLoanTerm] = useState('');\r\n  const [monthlyPayment, setMonthlyPayment] = useState('');\r\n  const [totalPayment, setTotalPayment] = useState('');\r\n\r\n  const calculateLoan = () => {\r\n    if (loanAmount && interestRate && loanTerm) {\r\n      const principal = parseFloat(loanAmount);\r\n      const rate = parseFloat(interestRate) / 100 / 12;\r\n      const term = parseFloat(loanTerm);\r\n\r\n      const monthlyRate = Math.pow(1 + rate, term);\r\n      const monthlyPayment = (principal * monthlyRate * rate) / (monthlyRate - 1);\r\n      const totalPayment = monthlyPayment * term;\r\n\r\n      setMonthlyPayment(monthlyPayment.toFixed(2));\r\n      setTotalPayment(totalPayment.toFixed(2));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Loan Calculator</h3>\r\n      <form>\r\n        <div>\r\n          <label htmlFor=\"loanAmount\">Loan Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"loanAmount\"\r\n            value={loanAmount}\r\n            onChange={(e) => setLoanAmount(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"interestRate\">Interest Rate (%):</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"interestRate\"\r\n            value={interestRate}\r\n            onChange={(e) => setInterestRate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"loanTerm\">Loan Term (months):</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"loanTerm\"\r\n            value={loanTerm}\r\n            onChange={(e) => setLoanTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"button\" onClick={calculateLoan}>\r\n          Calculate\r\n        </button>\r\n      </form>\r\n      {monthlyPayment && totalPayment && (\r\n        <div>\r\n          <h4>Monthly Payment: ${monthlyPayment}</h4>\r\n          <h4>Total Payment: ${totalPayment}</h4>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoanCalculator;\r\n"]},"metadata":{},"sourceType":"module"}