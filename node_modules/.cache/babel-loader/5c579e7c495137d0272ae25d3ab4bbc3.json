{"ast":null,"code":"var _jsxFileName = \"E:\\\\Module2_Chapter4-main\\\\Module2_Chapter4-main\\\\src\\\\BankApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport styles from './Bank.module.css';\nimport simple_token_abi from './Contracts/bank_app_abi.json';\nimport Interactions from './Interactions';\nimport LoanCalculator from './LoanCalculator.js'; // Import the LoanCalculator component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BankApp = () => {\n  _s();\n\n  // deploy simple token contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [transferHash, setTransferHash] = useState(null);\n  const [checkAcc, setCheckAcc] = useState(\"false\");\n  const [accStatus, setAccStatus] = useState(\"\");\n  const [accbalance, setAccBalance] = useState(\"\");\n  const [transactionHistory, setTransactionHistory] = useState([]);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  };\n\n  const disconnectWalletHandler = () => {\n    setDefaultAccount(null);\n    setConnButtonText('Connect Wallet');\n    setProvider(null);\n    setSigner(null);\n    setContract(null);\n    setTransactionHistory([]);\n  };\n\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    window.location.reload();\n  };\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n    let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\n    setContract(tempContract);\n  };\n\n  const createAccount = async () => {\n    let txt = await contract.createAcc();\n    console.log(txt);\n    setAccStatus(\"Your Account is created\");\n  };\n\n  const checkAccountExists = async () => {\n    let txt = await contract.accountExists();\n\n    if (txt == true) {\n      setCheckAcc(\"true\");\n    }\n  };\n\n  const AccountBalance = async () => {\n    let txt = await contract.accountBalance();\n    let balanceNumber = txt.toNumber();\n    console.log(balanceNumber);\n    setAccBalance('' + balanceNumber);\n  };\n\n  const DepositBalance = async e => {\n    e.preventDefault();\n    let depositAmount = e.target.depositAmount.value;\n    let txt = await contract.deposit({\n      value: depositAmount\n    });\n  };\n\n  const transferHandler = async e => {\n    e.preventDefault();\n    let transferAmount = e.target.sendAmount.value;\n    let recieverAddress = e.target.recieverAddress.value;\n    let txt = await contract.transferEther(recieverAddress, transferAmount);\n    setTransferHash(\"Transfer confirmation hash: \" + txt.hash);\n  };\n\n  const WithdrawBalance = async e => {\n    e.preventDefault();\n    let withdrawAmount = e.target.withdrawAmount.value;\n    let txt = await contract.withdraw(withdrawAmount);\n    console.log(txt);\n  };\n\n  const checkTransactionHistory = async () => {\n    let history = await contract.getTransactionHistory();\n    setTransactionHistory(history);\n  };\n\n  const changeDefaultAccount = () => {\n    let newAccount = prompt('Enter the new default account address:');\n    accountChangedHandler(newAccount);\n  };\n\n  const [showLoanCalculator, setShowLoanCalculator] = useState(false);\n\n  const openLoanCalculator = () => {\n    setShowLoanCalculator(true);\n  };\n\n  useEffect(() => {\n    if (contract) {\n      checkTransactionHistory();\n    }\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Easy Payment \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Account,Check Account,Check Balance,Transfer and Deposit loan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"You can calculate your \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button6,\n      onClick: connectWalletHandler,\n      children: connButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.walletCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Address: \", defaultAccount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: AccountBalance,\n          children: \"Account Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Balance in the Bank: \", accbalance, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openLoanCalculator,\n        className: styles.button6,\n        children: \"Open Loan Calculator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkTransactionHistory,\n        className: styles.button6,\n        children: \"Check Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeDefaultAccount,\n        className: styles.button6,\n        children: \"Change Default Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWalletHandler,\n        className: styles.button6,\n        children: \"Disconnect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), showLoanCalculator && /*#__PURE__*/_jsxDEV(LoanCalculator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.interactionsCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click here to Create your account. Make sure you are connected to Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createAccount,\n          children: \"CreateAccount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Click here to check if your account Exists or not\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkAccountExists,\n          children: \"CheckAccountExists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Account Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: checkAcc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: transferHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Transfer money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Reciever Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"recieverAddress\",\n          className: styles.addressInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Transfer Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"sendAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: transferHash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: DepositBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Deposit Money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Deposit Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"depositAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: WithdrawBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Withdraw Money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Withdraw Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"withdrawAmount\",\n          min: \"0\",\n          step: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button6,\n          children: \"Withdraw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), transactionHistory.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Transaction: \", transaction]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BankApp, \"BelZxXdBV3UpbzaC1sgtf8r13YE=\");\n\n_c = BankApp;\nexport default BankApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"BankApp\");","map":{"version":3,"sources":["E:/Module2_Chapter4-main/Module2_Chapter4-main/src/BankApp.js"],"names":["React","useState","useEffect","ethers","styles","simple_token_abi","Interactions","LoanCalculator","BankApp","contractAddress","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","provider","setProvider","signer","setSigner","contract","setContract","transferHash","setTransferHash","checkAcc","setCheckAcc","accStatus","setAccStatus","accbalance","setAccBalance","transactionHistory","setTransactionHistory","connectWalletHandler","window","ethereum","isMetaMask","request","method","then","result","accountChangedHandler","catch","error","message","console","log","disconnectWalletHandler","newAccount","updateEthers","chainChangedHandler","location","reload","on","tempProvider","providers","Web3Provider","tempSigner","getSigner","tempContract","Contract","createAccount","txt","createAcc","checkAccountExists","accountExists","AccountBalance","accountBalance","balanceNumber","toNumber","DepositBalance","e","preventDefault","depositAmount","target","value","deposit","transferHandler","transferAmount","sendAmount","recieverAddress","transferEther","hash","WithdrawBalance","withdrawAmount","withdraw","checkTransactionHistory","history","getTransactionHistory","changeDefaultAccount","prompt","showLoanCalculator","setShowLoanCalculator","openLoanCalculator","button6","walletCard","interactionsCard","addressInput","map","transaction","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport styles from './Bank.module.css';\nimport simple_token_abi from './Contracts/bank_app_abi.json';\nimport Interactions from './Interactions';\nimport LoanCalculator from './LoanCalculator.js'; // Import the LoanCalculator component\n\nconst BankApp = () => {\n  // deploy simple token contract and paste deployed contract address here. This value is local ganache chain\n  let contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  const [transferHash, setTransferHash] = useState(null);\n  const [checkAcc, setCheckAcc] = useState(\"false\");\n  const [accStatus, setAccStatus] = useState(\"\");\n  const [accbalance, setAccBalance] = useState(\"\");\n  const [transactionHistory, setTransactionHistory] = useState([]);\n\n  const connectWalletHandler = () => {\n    if (window.ethereum && window.ethereum.isMetaMask) {\n      window.ethereum\n        .request({ method: 'eth_requestAccounts' })\n        .then((result) => {\n          accountChangedHandler(result[0]);\n          setConnButtonText('Wallet Connected');\n        })\n        .catch((error) => {\n          setErrorMessage(error.message);\n        });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  };\n\n  const disconnectWalletHandler = () => {\n    setDefaultAccount(null);\n    setConnButtonText('Connect Wallet');\n    setProvider(null);\n    setSigner(null);\n    setContract(null);\n    setTransactionHistory([]);\n  };\n\n  const accountChangedHandler = (newAccount) => {\n    setDefaultAccount(newAccount);\n    updateEthers();\n  };\n\n  const chainChangedHandler = () => {\n    window.location.reload();\n  };\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n\n  const updateEthers = () => {\n    let tempProvider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(tempProvider);\n\n    let tempSigner = tempProvider.getSigner();\n    setSigner(tempSigner);\n\n    let tempContract = new ethers.Contract(contractAddress, simple_token_abi, tempSigner);\n    setContract(tempContract);\n  };\n\n  const createAccount = async () => {\n    let txt = await contract.createAcc();\n    console.log(txt);\n    setAccStatus(\"Your Account is created\");\n  };\n\n  const checkAccountExists = async () => {\n    let txt = await contract.accountExists();\n    if (txt == true) {\n      setCheckAcc(\"true\");\n    }\n  };\n\n  const AccountBalance = async () => {\n    let txt = await contract.accountBalance();\n    let balanceNumber = txt.toNumber();\n    console.log(balanceNumber);\n    setAccBalance('' + balanceNumber);\n  };\n\n  const DepositBalance = async (e) => {\n    e.preventDefault();\n    let depositAmount = e.target.depositAmount.value;\n    let txt = await contract.deposit({\n      value: depositAmount,\n    });\n  };\n\n  const transferHandler = async (e) => {\n    e.preventDefault();\n    let transferAmount = e.target.sendAmount.value;\n    let recieverAddress = e.target.recieverAddress.value;\n    let txt = await contract.transferEther(recieverAddress, transferAmount);\n    setTransferHash(\"Transfer confirmation hash: \" + txt.hash);\n  };\n\n  const WithdrawBalance = async (e) => {\n    e.preventDefault();\n    let withdrawAmount = e.target.withdrawAmount.value;\n    let txt = await contract.withdraw(withdrawAmount);\n    console.log(txt);\n  };\n\n  const checkTransactionHistory = async () => {\n    let history = await contract.getTransactionHistory();\n    setTransactionHistory(history);\n  };\n\n  const changeDefaultAccount = () => {\n    let newAccount = prompt('Enter the new default account address:');\n    accountChangedHandler(newAccount);\n  };\n\n  const [showLoanCalculator, setShowLoanCalculator] = useState(false);\n\n  const openLoanCalculator = () => {\n    setShowLoanCalculator(true);\n  };\n\n  useEffect(() => {\n    if (contract) {\n      checkTransactionHistory();\n    }\n  }, [contract]);\n\n  return (\n    <div>\n      <h1>Easy Payment </h1>\n\t  <h2>Create Account,Check Account,Check Balance,Transfer and Deposit loan</h2>\n\t  <h2>You can calculate your </h2>\n      <button className={styles.button6} onClick={connectWalletHandler}>\n        {connButtonText}\n      </button>\n\n      <div className={styles.walletCard}>\n        <div>\n          <h3>Address: {defaultAccount}</h3>\n        </div>\n\n        <div>\n          <button onClick={AccountBalance}>Account Balance</button>{' '}\n          <h3>Balance in the Bank: {accbalance} </h3>\n        </div>\n\n        {errorMessage}\n\n        <button onClick={openLoanCalculator} className={styles.button6}>\n          Open Loan Calculator\n        </button>\n        <button onClick={checkTransactionHistory} className={styles.button6}>\n          Check Transaction History\n        </button>\n        <button onClick={changeDefaultAccount} className={styles.button6}>\n          Change Default Account\n        </button>\n        <button onClick={disconnectWalletHandler} className={styles.button6}>\n          Disconnect Wallet\n        </button>\n\t\t{showLoanCalculator && <LoanCalculator />}\n      </div>\n\n      <div className={styles.interactionsCard}>\n        <div>\n          <h4>Click here to Create your account. Make sure you are connected to Wallet</h4>\n          <button onClick={createAccount}>CreateAccount</button>\n          <h4>Click here to check if your account Exists or not</h4>\n          <button onClick={checkAccountExists}>CheckAccountExists</button>\n          <h4>Your Account Status</h4> <h5>{checkAcc}</h5>\n        </div>\n        <form onSubmit={transferHandler}>\n          <h3>Transfer money</h3>\n          <p>Reciever Address</p>\n          <input type=\"text\" id=\"recieverAddress\" className={styles.addressInput} />\n\n          <p>Transfer Amount</p>\n          <input type=\"number\" id=\"sendAmount\" min=\"0\" step=\"1\" />\n\n          <button type=\"submit\" className={styles.button6}>\n            Transfer\n          </button>\n          <div>{transferHash}</div>\n        </form>\n        <form onSubmit={DepositBalance}>\n          <h3>Deposit Money</h3>\n          <p>Deposit Amount</p>\n          <input type=\"number\" id=\"depositAmount\" min=\"0\" step=\"1\" />\n          <button type=\"submit\" className={styles.button6}>\n            Deposit\n          </button>\n        </form>\n        <form onSubmit={WithdrawBalance}>\n          <h3>Withdraw Money</h3>\n          <p>Withdraw Amount</p>\n          <input type=\"number\" id=\"withdrawAmount\" min=\"0\" step=\"1\" />\n          <button type=\"submit\" className={styles.button6}>\n            Withdraw\n          </button>\n        </form>\n      </div>\n\n      \n\n      <div>\n        <h3>Transaction History</h3>\n        {transactionHistory.map((transaction, index) => (\n          <div key={index}>\n            <p>Transaction: {transaction}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BankApp;\n"]},"metadata":{},"sourceType":"module"}